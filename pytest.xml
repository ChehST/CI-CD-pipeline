<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="13" time="0.828" timestamp="2024-04-23T19:09:09.595743" hostname="DESKTOP-7NCN562"><testcase classname="Parser.tests.toolkit_test" name="test_requests_get" time="0.272" /><testcase classname="Parser.tests.toolkit_test" name="test_get_response_bypassed[https://www.list.am/category/56/1?n=0&amp;cmtype=1&amp;price2=234567&amp;crc=1&amp;gl=2-200]" time="0.342" /><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[src/fixtures/index.html-True]" time="0.001"><failure message="assert not True">path_to_file = 'src/fixtures/index.html', expected_result = True

    @pytest.mark.parametrize(
            "path_to_file, expected_result",
            [
                ("src/fixtures/index.html", True),
                ("src/fixtures/doesn't_exist.html_file", False),
                (1,False),
                (' ',False),
                ({1,'r',('2','2')}, False),
                ([],False),
            ])
    def test_get_html_f(path_to_file, expected_result):
        try:
            result = get_html_f(path_to_file)
            if result != False:
                result = True # Therefore, the opened file status is 'True'.
            else: result = False
&gt;           assert result == expected_result
E           assert False == True

Parser\tests\toolkit_test.py:49: AssertionError

During handling of the above exception, another exception occurred:

path_to_file = 'src/fixtures/index.html', expected_result = True

    @pytest.mark.parametrize(
            "path_to_file, expected_result",
            [
                ("src/fixtures/index.html", True),
                ("src/fixtures/doesn't_exist.html_file", False),
                (1,False),
                (' ',False),
                ({1,'r',('2','2')}, False),
                ([],False),
            ])
    def test_get_html_f(path_to_file, expected_result):
        try:
            result = get_html_f(path_to_file)
            if result != False:
                result = True # Therefore, the opened file status is 'True'.
            else: result = False
            assert result == expected_result
        except Exception:
&gt;           assert not expected_result
E           assert not True

Parser\tests\toolkit_test.py:51: AssertionError</failure></testcase><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[src/fixtures/doesn't_exist.html_file-False]" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[1-False]" time="0.001" /><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[ -False]" time="0.001" /><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[path_to_file4-False]" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_get_html_f[path_to_file5-False]" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_get_page_dict" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_remove_non_numeric_keys" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_get_last_page" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_count_ads_at_page" time="0.000" /><testcase classname="Parser.tests.toolkit_test" name="test_counter_ads_at_page_request" time="0.000" /></testsuite></testsuites>